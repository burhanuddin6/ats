# Generated by Django 4.2.1 on 2023-07-30 18:38

import apps.applicants.models
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Base_Job_Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Application', max_length=128, verbose_name='Job Stage Name')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Description')),
                ('start_Date', models.DateField(verbose_name='Start Date')),
                ('end_Date', models.DateField(verbose_name='End Date')),
            ],
            options={
                'base_manager_name': 'non_polymorphic',
            },
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('candidate_ID', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='64-character Random ID string for Candidates')),
                ('created_At', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
                ('first_Name', models.CharField(max_length=64)),
                ('last_Name', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Candidate_Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Accepted'), ('R', 'Rejected'), ('U', 'Undecided')], max_length=1, verbose_name='Application Status')),
                ('candidate_ID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_application', to='applicants.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ed_Level', models.CharField(choices=[('B', 'Bachelors'), ('M', 'Masters'), ('P', 'PhD')], max_length=1, verbose_name='Education Level')),
                ('field_Name', models.CharField(max_length=128, verbose_name='Field of Education')),
                ('institute_Name', models.CharField(max_length=128, verbose_name='Institute Name')),
                ('graduation_Year', models.IntegerField(verbose_name='Graduation Year')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_Name', models.CharField(max_length=128, verbose_name='Company Name')),
                ('job_Title', models.CharField(max_length=128, verbose_name='Job Title')),
                ('start_Date', models.DateField(verbose_name='Start Date')),
                ('end_Date', models.DateField(verbose_name='End Date')),
                ('job_Description', models.TextField(max_length=1024, verbose_name='Job Description')),
                ('salary', models.IntegerField(verbose_name='Salary In PKR')),
                ('reason_For_Leaving', models.TextField(max_length=1024, verbose_name='Reason For Leaving')),
                ('job_Slip_File_Name', models.CharField(max_length=64, null=True, verbose_name='File name for job slip')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Platform Name')),
                ('URL', models.CharField(max_length=128, validators=[apps.applicants.models.OptionalSchemeURLValidator()], verbose_name='Platform URL')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_ID', models.CharField(db_index=True, max_length=13, verbose_name='National ID Card Number')),
                ('phone', models.CharField(db_index=True, max_length=11, verbose_name='Phone Number')),
                ('date_Of_Birth', models.DateField(verbose_name='Date of Birth')),
                ('photo_File_Name', models.CharField(max_length=64, null=True)),
                ('resume_File_Name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_At', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
                ('first_Name', models.CharField(max_length=64)),
                ('last_Name', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter', to=settings.AUTH_USER_MODEL, validators=[apps.applicants.models.is_recruiter])),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('base_job_stage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='applicants.base_job_stage')),
            ],
            options={
                'verbose_name': 'Application Stage For Jobs',
                'verbose_name_plural': 'Application Stages For Jobs',
                'ordering': ['job_ID', 'start_Date', 'end_Date'],
            },
            bases=('applicants.base_job_stage',),
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('base_job_stage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='applicants.base_job_stage')),
                ('type', models.CharField(choices=[('O', 'Online'), ('I', 'In Person')], default='O', max_length=1, verbose_name='Interview Type')),
                ('duration', models.IntegerField(verbose_name='Each Interview Duration in Minutes')),
            ],
            options={
                'verbose_name': 'Interview Stage For Jobs',
                'verbose_name_plural': 'Interview Stages For Jobs',
                'ordering': ['job_ID', 'start_Date', 'end_Date'],
            },
            bases=('applicants.base_job_stage',),
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('base_job_stage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='applicants.base_job_stage')),
                ('duration', models.IntegerField(verbose_name='Test Duration in Minutes')),
            ],
            options={
                'verbose_name': 'Test Stage For Jobs',
                'verbose_name_plural': 'Test Stages For Jobs',
                'ordering': ['job_ID', 'start_Date', 'end_Date'],
            },
            bases=('applicants.base_job_stage',),
            managers=[
                ('non_polymorphic', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Slot_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_Date', models.DateField(verbose_name='Start Date')),
                ('number_Of_Slots', models.IntegerField(verbose_name='Number of slots')),
                ('min_Gap_Between', models.IntegerField(default=10, verbose_name='Gap Between Interviews in Minutes')),
                ('interviewer_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_interviews', to='applicants.recruiter', verbose_name='Interviewer')),
                ('interview_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slot_groups', to='applicants.interview', verbose_name='Interview')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_Name', models.CharField(max_length=128, verbose_name='Skill Name')),
                ('certificate_File_Name', models.CharField(max_length=64, null=True, verbose_name='File name for certificate related to the skill')),
                ('candidate_Application_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='applicants.candidate_application')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_URL', models.CharField(max_length=128, validators=[apps.applicants.models.OptionalSchemeURLValidator()], verbose_name='LinkedIn Profile URL')),
                ('candidate_Application_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='applicants.candidate_application')),
                ('platform_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='applicants.platform')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Job Title')),
                ('overview', ckeditor.fields.RichTextField(verbose_name='Job Description')),
                ('responsibilities', ckeditor.fields.RichTextField(verbose_name='Job Responsibilities')),
                ('qualifications', ckeditor.fields.RichTextField(verbose_name='Job Qualifications')),
                ('salary_Range', models.CharField(choices=[('25,000 - 50,000', '25,000 - 50,000'), ('50,000 - 75,000', '50,000 - 75,000'), ('75,000 - 100,000', '75,000 - 100,000'), ('100,000 - 125,000', '100,000 - 125,000'), ('125,000 - 150,000', '125,000 - 150,000'), ('150,000 - 175,000', '150,000 - 175,000'), ('175,000 - 200,000', '175,000 - 200,000'), ('200,000 - 225,000', '200,000 - 225,000'), ('225,000 - 250,000', '225,000 - 250,000'), ('250,000 - 275,000', '250,000 - 275,000'), ('275,000 - 300,000', '275,000 - 300,000'), ('300,000 - 325,000', '300,000 - 325,000')], max_length=20, verbose_name='Salary Range')),
                ('work_Site', models.CharField(choices=[('R', 'Remote'), ('O', 'In Office'), ('H', 'Hybrid')], max_length=1, verbose_name='Work Site')),
                ('work_Type', models.CharField(choices=[('F', 'Full Time'), ('P', 'Part Time'), ('I', 'Internship'), ('C', 'Contract')], max_length=1, verbose_name='Work Type')),
                ('open', models.BooleanField(choices=[(True, 'Open'), (False, 'Closed')], default=True, verbose_name='Job Status')),
                ('created_By', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs_created', to='applicants.recruiter')),
            ],
        ),
        migrations.CreateModel(
            name='Interview_Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_Of_Interview', models.DateTimeField(verbose_name='Date and Time of Interview')),
                ('cancelled', models.BooleanField(default=False, verbose_name='Cancelation status')),
                ('vacant', models.BooleanField(default=True, verbose_name='Vacancy')),
                ('slot_Group_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='applicants.slot_group', verbose_name='Group of the slot')),
            ],
        ),
        migrations.CreateModel(
            name='Interview_Daily_TimeFrame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('M', 'Monday'), ('T', 'Tuesday'), ('W', 'Wednesday'), ('H', 'Thursday'), ('F', 'Friday'), ('S', 'Saturday'), ('U', 'Sunday')], max_length=1, verbose_name='Day')),
                ('start_Time', models.TimeField(verbose_name='Start Time')),
                ('end_Time', models.TimeField(verbose_name='End Time')),
                ('slot_Group_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_timeframes', to='applicants.slot_group', verbose_name='Slot Group')),
            ],
        ),
        migrations.AddField(
            model_name='candidate_application',
            name='education',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_application', to='applicants.education'),
        ),
        migrations.AddField(
            model_name='candidate_application',
            name='experience',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_application', to='applicants.experience'),
        ),
        migrations.AddField(
            model_name='candidate_application',
            name='profile',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_application', to='applicants.profile'),
        ),
        migrations.AddField(
            model_name='base_job_stage',
            name='created_By',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_stages_created', to='applicants.recruiter'),
        ),
        migrations.AddField(
            model_name='base_job_stage',
            name='job_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_stages', to='applicants.job'),
        ),
        migrations.AddField(
            model_name='base_job_stage',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='Candidate_Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Accepted'), ('R', 'Rejected'), ('U', 'Undecided')], max_length=1, verbose_name='Test Status')),
                ('candidate_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_tests', to='applicants.candidate')),
                ('test_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_tests', to='applicants.test')),
            ],
        ),
        migrations.CreateModel(
            name='Candidate_Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Accepted'), ('R', 'Rejected'), ('U', 'Undecided')], max_length=1, verbose_name='Interview Status')),
                ('interviewer_Remarks', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Interviewer Remarks')),
                ('candidate_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='applicants.candidate')),
                ('interview_Slot_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidate_interviews', to='applicants.interview_slot')),
                ('interview_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_interviews', to='applicants.interview')),
            ],
        ),
        migrations.AddField(
            model_name='candidate_application',
            name='application_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_applications', to='applicants.application'),
        ),
    ]
